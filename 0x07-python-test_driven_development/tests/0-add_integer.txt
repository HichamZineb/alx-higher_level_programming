The 0-add_integer.py module
===========================
The use of the add_integer function
===================================

importing the function from the module
______________________________________
	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(5, 2)
	7
	>>> add_integer(3, -1)
	2

Testing floats
______________
	>>> add_integer(2.0, 3.0)
	5

Floats are casted to ints before addition
_________________________________________
	>>> add_integer(2.3, 5.6)
	7
	>>> add_integer(-1.2, -3.4)
	-4

Floats and ints are allowed
___________________________
	>>> add_integer(4, 2.3)
	6

The second argument is 98 if not provided
_________________________________________
	>>> add_integer(2)
	100
	
	>>> add_integer()
	Traceback (most recent call last):
	TypeError: add_integer() missing 1 required positional argument: 'a'

	>>> add_integer('a', 'b')
	Traceback (most recent call last):
	TypeError: a must be an integer

	>>> add_integer('a')
	Traceback (most recent call last):
	TypeError: a must be an integer

	>>> add_integer('a', 3)
	Traceback (most recent call last):
	TypeError: a must be an integer

	>>> add_integer(3, 'b')
	Traceback (most recent call last):
	TypeError: b must be an integer

	>>> add_integer(float('inf'))
	Traceback (most recent call last):
	OverflowError: cannot convert float infinity to integer

	>>> add_integer(0, float('nan'))
	Traceback (most recent call last):
	ValueError: cannot convert float NaN to integer

	

